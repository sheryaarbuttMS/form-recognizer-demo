{"version":3,"sources":["components/react-image-lightbox/util.js","components/react-image-lightbox/constant.js","components/react-image-lightbox/react-image-lightbox.js","components/Footer.jsx","utility/image.js","store/global.store.js","components/DocumentSelector.jsx","pages/LandingPage.jsx","components/DragAndDrop.jsx","data.js","components/Gallery.jsx","pages/FileSelectorPage.jsx","components/react-image-lightbox/index.js","components/AnalysedImage.js","components/Results.js","utility/strings.js","pages/ResultsPage.jsx","App.js","index.js"],"names":["translate","str","replaceStrings","translated","Object","keys","forEach","placeholder","replace","getWindowWidth","global","window","innerWidth","getWindowHeight","innerHeight","getHighestSafeWindowContext","self","referrer","document","top","getOrigin","href","match","location","parent","MIN_ZOOM_LEVEL","MAX_ZOOM_LEVEL","ZOOM_RATIO","ZOOM_BUTTON_INCREMENT_SIZE","WHEEL_MOVE_X_THRESHOLD","WHEEL_MOVE_Y_THRESHOLD","KEYS","ESC","LEFT_ARROW","RIGHT_ARROW","ACTION_NONE","ACTION_MOVE","ACTION_SWIPE","ACTION_PINCH","SOURCE_ANY","SOURCE_MOUSE","SOURCE_TOUCH","SOURCE_POINTER","MIN_SWIPE_DISTANCE","ReactImageLightbox","props","state","isClosing","animationDisabled","shouldAnimate","zoomLevel","offsetX","offsetY","loadErrorStatus","outerEl","React","createRef","zoomInBtn","zoomOutBtn","caption","closeIfClickInner","bind","handleImageDoubleClick","handleImageMouseWheel","handleKeyInput","handleMouseUp","handleMouseDown","handleMouseMove","handleOuterMousewheel","handleTouchStart","handleTouchMove","handleTouchEnd","handlePointerEvent","handleCaptionMousewheel","handleWindowResize","handleZoomInButtonClick","handleZoomOutButtonClick","requestClose","requestMoveNext","requestMovePrev","this","timeouts","currentAction","eventsSource","pointerList","preventInnerClose","preventInnerCloseTimeout","keyPressed","imageCache","lastKeyDownTime","resizeTimeout","wheelActionTimeout","resetScrollTimeout","scrollX","scrollY","moveStartX","moveStartY","moveStartOffsetX","moveStartOffsetY","swipeStartX","swipeStartY","swipeEndX","swipeEndY","pinchTouchList","pinchDistance","keyCounter","moveRequested","setState","windowContext","listeners","resize","mouseup","touchend","touchcancel","pointerdown","pointermove","pointerup","pointercancel","type","addEventListener","loadAllImages","nextProps","sourcesChanged","prevSrcDict","nextSrcDict","getSrcTypes","srcType","name","prevSrc","loaded","didUnmount","removeEventListener","tid","clearTimeout","func","time","id","setTimeout","filter","push","imageSrc","fitSizes","isImageLoaded","getFitSizes","width","height","src","targetHeight","targetWidth","stretch","boxSize","getLightboxRect","maxHeight","imagePadding","maxWidth","Math","min","currentImageInfo","getBestImageForType","maxX","minX","maxY","minY","zoomMultiplier","getZoomMultiplier","keyEnding","current","getBoundingClientRect","right","bottom","left","clientX","clientY","enableZoom","nextZoomLevel","max","imageBaseSize","currentZoomMultiplier","nextZoomMultiplier","boxRect","pointerX","pointerY","currentImageOffsetX","currentImageOffsetY","nextImageRealOffsetX","nextImageRealOffsetY","nextOffsetX","nextOffsetY","maxOffsets","getMaxOffsets","event","target","className","search","stopPropagation","isAnimating","keyCode","which","currentTime","Date","getTime","keyRepeatLimit","preventDefault","nextSrc","keyRepeatKeyupBonus","xThreshold","actionDelay","abs","deltaY","deltaX","bigLeapX","yThreshold","changeZoom","source","filterPointersBySource","pointer","shouldHandleEvent","isTargetMatchImage","addPointer","parseMouseEvent","multiPointerStart","multiPointerMove","removePointer","multiPointerEnd","parsePointerEvent","call","changedTouches","eventTouch","parseTouchPointer","map","touch","handleSwipeStart","handleMoveStart","handleEnd","length","decideMoveOrSwipe","handlePinchStart","handleMove","handleSwipe","handlePinch","setPreventInnerClose","handleMoveEnd","handleSwipeEnd","handlePinchEnd","x","y","newOffsetX","newOffsetY","animationDuration","xDiff","xDiffAbs","yDiffAbs","a","b","sqrt","calculatePinchDistance","oldPointer","i","newDistance","calculatePinchCenter","forceUpdate","focus","scrollHeight","scrollTop","done","inMemoryImage","Image","imageCrossOrigin","crossOrigin","onerror","errorEvent","onImageLoadError","prevState","onload","onImageLoad","generateLoadDoneCallback","err","loadImage","closeLightbox","onCloseRequest","animationOnKeyInput","direction","nextState","onMovePrevRequest","onMoveNextRequest","requestMove","clickOutsideToClose","discourageDownloads","imageTitle","toolbarButtons","reactModalStyle","onAfterOpen","reactModalProps","transitionStyle","transition","keyEndings","images","addImage","imageClass","transforms","bestImageInfo","imageStyle","getTransform","cursor","object","some","key","style","imageLoadErrorMessage","backgroundImage","onDoubleClick","onWheel","onDragStart","e","alt","draggable","loadingIcon","Array","_","index","zoom","modalStyle","overlay","zIndex","backgroundColor","content","overflow","border","borderRadius","padding","isOpen","onRequestClose","undefined","contentLabel","appElement","body","wrapperClassName","animationDirection","ref","onMouseMove","onMouseDown","onTouchStart","onTouchMove","tabIndex","onKeyDown","onKeyUp","onClick","aria-label","prevLabel","nextLabel","button","zoomInLabel","join","disabled","zoomOutLabel","closeLabel","imageCaption","test","mouseEvent","parseInt","touchPointer","identifier","pointerEvent","pointerId","nextX","windowWidth","scaleFactor","transform","Component","defaultProps","mainSrcThumbnail","nextSrcThumbnail","prevSrcThumbnail","Footer","getDataUrlFromFile","file","Promise","resolve","reject","reader","FileReader","result","toString","ev","error","readAsDataURL","getImageUriFromFileName","filename","baseUri","origin","setSelectedDocumentType","documentType","useStore","getState","selectedDocumentType","onSelectImage","image","uri","selectedImage","dataUri","selectedImageFileName","onUpload","imgObj","create","set","get","DocumentSelector","history","useHistory","onChangeDocumentType","menuStyle","btn","active","aria-current","LandingPage","size","to","baseStyle","display","flexDirection","alignItems","borderWidth","borderColor","borderStyle","color","activeStyle","acceptStyle","rejectStyle","DragAndDrop","enqueueSnackbar","useSnackbar","onDrop","useCallback","acceptedFiles","fileRejections","variant","preventDuplicate","useDropzone","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","useMemo","xmlns","fill","viewBox","fillRule","d","INVOICES","RECEIPTS","Gallery","thumbUri","isSelected","FileSelectorPage","Lightbox","AnalysedImage","selectedModel","useState","isLightBoxOpen","setIsLightBoxOpen","fileUrl","title","slice","align","marginTop","mainSrc","tableClass","InvoiceResultTable","fields","InvoiceDate","CustomerName","CustomerAddress","VendorName","InvoiceTotal","valueData","text","confidence","ReceiptsResultTable","MerchantName","MerchantAddress","MerchantPhoneNumber","TransactionDate","TransactionTime","Subtotal","Tip","Total","Results","imageData","activeTab","setActiveTab","string","documentName","charAt","toUpperCase","informationTitle","JSON","stringify","renderResults","ResultsPage","processingStatus","setProcessingStatus","setImageData","toLowerCase","isLoading","hasError","hasLoaded","useEffect","goBack","model","fetch","method","headers","response","json","data","formData","FormData","append","analyseSelectedImage","App","path","exact","ReactDOM","render","StrictMode","autoHideDuration","maxSnack","anchorOrigin","vertical","horizontal","getElementById"],"mappings":"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","file":"static/js/main.dfb125a8.chunk.js","sourcesContent":["/**\n * Placeholder for future translate functionality\n */\nexport function translate(str, replaceStrings = null) {\n  if (!str) {\n    return '';\n  }\n\n  let translated = str;\n  if (replaceStrings) {\n    Object.keys(replaceStrings).forEach(placeholder => {\n      translated = translated.replace(placeholder, replaceStrings[placeholder]);\n    });\n  }\n\n  return translated;\n}\n\nexport function getWindowWidth() {\n  return typeof global.window !== 'undefined' ? global.window.innerWidth : 0;\n}\n\nexport function getWindowHeight() {\n  return typeof global.window !== 'undefined' ? global.window.innerHeight : 0;\n}\n\n// Get the highest window context that isn't cross-origin\n// (When in an iframe)\nexport function getHighestSafeWindowContext(self = global.window.self) {\n  const { referrer } = self.document;\n  // If we reached the top level, return self\n  if (self === global.window.top || !referrer) {\n    return self;\n  }\n\n  const getOrigin = href => href.match(/(.*\\/\\/.*?)(\\/|$)/)[1];\n\n  // If parent is the same origin, we can move up one context\n  // Reference: https://stackoverflow.com/a/21965342/1601953\n  if (getOrigin(self.location.href) === getOrigin(referrer)) {\n    return getHighestSafeWindowContext(self.parent);\n  }\n\n  // If a different origin, we consider the current level\n  // as the top reachable one\n  return self;\n}\n","// Min image zoom level\nexport const MIN_ZOOM_LEVEL = 0;\n\n// Max image zoom level\nexport const MAX_ZOOM_LEVEL = 300;\n\n// Size ratio between previous and next zoom levels\nexport const ZOOM_RATIO = 1.007;\n\n// How much to increase/decrease the zoom level when the zoom buttons are clicked\nexport const ZOOM_BUTTON_INCREMENT_SIZE = 100;\n\n// Used to judge the amount of horizontal scroll needed to initiate a image move\nexport const WHEEL_MOVE_X_THRESHOLD = 200;\n\n// Used to judge the amount of vertical scroll needed to initiate a zoom action\nexport const WHEEL_MOVE_Y_THRESHOLD = 1;\n\nexport const KEYS = {\n  ESC: 27,\n  LEFT_ARROW: 37,\n  RIGHT_ARROW: 39,\n};\n\n// Actions\nexport const ACTION_NONE = 0;\nexport const ACTION_MOVE = 1;\nexport const ACTION_SWIPE = 2;\nexport const ACTION_PINCH = 3;\nexport const ACTION_ROTATE = 4;\n\n// Events source\nexport const SOURCE_ANY = 0;\nexport const SOURCE_MOUSE = 1;\nexport const SOURCE_TOUCH = 2;\nexport const SOURCE_POINTER = 3;\n\n// Minimal swipe distance\nexport const MIN_SWIPE_DISTANCE = 200;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from 'react-modal';\nimport {\n  translate,\n  getWindowWidth,\n  getWindowHeight,\n  getHighestSafeWindowContext,\n} from './util';\nimport {\n  KEYS,\n  MIN_ZOOM_LEVEL,\n  MAX_ZOOM_LEVEL,\n  ZOOM_RATIO,\n  WHEEL_MOVE_X_THRESHOLD,\n  WHEEL_MOVE_Y_THRESHOLD,\n  ZOOM_BUTTON_INCREMENT_SIZE,\n  ACTION_NONE,\n  ACTION_MOVE,\n  ACTION_SWIPE,\n  ACTION_PINCH,\n  SOURCE_ANY,\n  SOURCE_MOUSE,\n  SOURCE_TOUCH,\n  SOURCE_POINTER,\n  MIN_SWIPE_DISTANCE,\n} from './constant';\nimport './style.css';\n\nclass ReactImageLightbox extends Component {\n  static isTargetMatchImage(target) {\n    return target && /ril-image-current/.test(target.className);\n  }\n\n  static parseMouseEvent(mouseEvent) {\n    return {\n      id: 'mouse',\n      source: SOURCE_MOUSE,\n      x: parseInt(mouseEvent.clientX, 10),\n      y: parseInt(mouseEvent.clientY, 10),\n    };\n  }\n\n  static parseTouchPointer(touchPointer) {\n    return {\n      id: touchPointer.identifier,\n      source: SOURCE_TOUCH,\n      x: parseInt(touchPointer.clientX, 10),\n      y: parseInt(touchPointer.clientY, 10),\n    };\n  }\n\n  static parsePointerEvent(pointerEvent) {\n    return {\n      id: pointerEvent.pointerId,\n      source: SOURCE_POINTER,\n      x: parseInt(pointerEvent.clientX, 10),\n      y: parseInt(pointerEvent.clientY, 10),\n    };\n  }\n\n  // Request to transition to the previous image\n  static getTransform({ x = 0, y = 0, zoom = 1, width, targetWidth }) {\n    let nextX = x;\n    const windowWidth = getWindowWidth();\n    if (width > windowWidth) {\n      nextX += (windowWidth - width) / 2;\n    }\n    const scaleFactor = zoom * (targetWidth / width);\n\n    return {\n      transform: `translate3d(${nextX}px,${y}px,0) scale3d(${scaleFactor},${scaleFactor},1)`,\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      //-----------------------------\n      // Animation\n      //-----------------------------\n\n      // Lightbox is closing\n      // When Lightbox is mounted, if animation is enabled it will open with the reverse of the closing animation\n      isClosing: !props.animationDisabled,\n\n      // Component parts should animate (e.g., when images are moving, or image is being zoomed)\n      shouldAnimate: false,\n\n      //-----------------------------\n      // Zoom settings\n      //-----------------------------\n      // Zoom level of image\n      zoomLevel: MIN_ZOOM_LEVEL,\n\n      //-----------------------------\n      // Image position settings\n      //-----------------------------\n      // Horizontal offset from center\n      offsetX: 0,\n\n      // Vertical offset from center\n      offsetY: 0,\n\n      // image load error for srcType\n      loadErrorStatus: {},\n    };\n\n    // Refs\n    this.outerEl = React.createRef();\n    this.zoomInBtn = React.createRef();\n    this.zoomOutBtn = React.createRef();\n    this.caption = React.createRef();\n\n    this.closeIfClickInner = this.closeIfClickInner.bind(this);\n    this.handleImageDoubleClick = this.handleImageDoubleClick.bind(this);\n    this.handleImageMouseWheel = this.handleImageMouseWheel.bind(this);\n    this.handleKeyInput = this.handleKeyInput.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleOuterMousewheel = this.handleOuterMousewheel.bind(this);\n    this.handleTouchStart = this.handleTouchStart.bind(this);\n    this.handleTouchMove = this.handleTouchMove.bind(this);\n    this.handleTouchEnd = this.handleTouchEnd.bind(this);\n    this.handlePointerEvent = this.handlePointerEvent.bind(this);\n    this.handleCaptionMousewheel = this.handleCaptionMousewheel.bind(this);\n    this.handleWindowResize = this.handleWindowResize.bind(this);\n    this.handleZoomInButtonClick = this.handleZoomInButtonClick.bind(this);\n    this.handleZoomOutButtonClick = this.handleZoomOutButtonClick.bind(this);\n    this.requestClose = this.requestClose.bind(this);\n    this.requestMoveNext = this.requestMoveNext.bind(this);\n    this.requestMovePrev = this.requestMovePrev.bind(this);\n  }\n\n  // eslint-disable-next-line camelcase\n  UNSAFE_componentWillMount() {\n    // Timeouts - always clear it before umount\n    this.timeouts = [];\n\n    // Current action\n    this.currentAction = ACTION_NONE;\n\n    // Events source\n    this.eventsSource = SOURCE_ANY;\n\n    // Empty pointers list\n    this.pointerList = [];\n\n    // Prevent inner close\n    this.preventInnerClose = false;\n    this.preventInnerCloseTimeout = null;\n\n    // Used to disable animation when changing props.mainSrc|nextSrc|prevSrc\n    this.keyPressed = false;\n\n    // Used to store load state / dimensions of images\n    this.imageCache = {};\n\n    // Time the last keydown event was called (used in keyboard action rate limiting)\n    this.lastKeyDownTime = 0;\n\n    // Used for debouncing window resize event\n    this.resizeTimeout = null;\n\n    // Used to determine when actions are triggered by the scroll wheel\n    this.wheelActionTimeout = null;\n    this.resetScrollTimeout = null;\n    this.scrollX = 0;\n    this.scrollY = 0;\n\n    // Used in panning zoomed images\n    this.moveStartX = 0;\n    this.moveStartY = 0;\n    this.moveStartOffsetX = 0;\n    this.moveStartOffsetY = 0;\n\n    // Used to swipe\n    this.swipeStartX = 0;\n    this.swipeStartY = 0;\n    this.swipeEndX = 0;\n    this.swipeEndY = 0;\n\n    // Used to pinch\n    this.pinchTouchList = null;\n    this.pinchDistance = 0;\n\n    // Used to differentiate between images with identical src\n    this.keyCounter = 0;\n\n    // Used to detect a move when all src's remain unchanged (four or more of the same image in a row)\n    this.moveRequested = false;\n\n    if (!this.props.animationDisabled) {\n      // Make opening animation play\n      this.setState({ isClosing: false });\n    }\n  }\n\n  componentDidMount() {\n    // Prevents cross-origin errors when using a cross-origin iframe\n    this.windowContext = getHighestSafeWindowContext();\n\n    this.listeners = {\n      resize: this.handleWindowResize,\n      mouseup: this.handleMouseUp,\n      touchend: this.handleTouchEnd,\n      touchcancel: this.handleTouchEnd,\n      pointerdown: this.handlePointerEvent,\n      pointermove: this.handlePointerEvent,\n      pointerup: this.handlePointerEvent,\n      pointercancel: this.handlePointerEvent,\n    };\n    Object.keys(this.listeners).forEach(type => {\n      this.windowContext.addEventListener(type, this.listeners[type]);\n    });\n\n    this.loadAllImages();\n  }\n\n  // eslint-disable-next-line camelcase\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // Iterate through the source types for prevProps and nextProps to\n    //  determine if any of the sources changed\n    let sourcesChanged = false;\n    const prevSrcDict = {};\n    const nextSrcDict = {};\n    this.getSrcTypes().forEach(srcType => {\n      if (this.props[srcType.name] !== nextProps[srcType.name]) {\n        sourcesChanged = true;\n\n        prevSrcDict[this.props[srcType.name]] = true;\n        nextSrcDict[nextProps[srcType.name]] = true;\n      }\n    });\n\n    if (sourcesChanged || this.moveRequested) {\n      // Reset the loaded state for images not rendered next\n      Object.keys(prevSrcDict).forEach(prevSrc => {\n        if (!(prevSrc in nextSrcDict) && prevSrc in this.imageCache) {\n          this.imageCache[prevSrc].loaded = false;\n        }\n      });\n\n      this.moveRequested = false;\n\n      // Load any new images\n      this.loadAllImages(nextProps);\n    }\n  }\n\n  shouldComponentUpdate() {\n    // Wait for move...\n    return !this.moveRequested;\n  }\n\n  componentWillUnmount() {\n    this.didUnmount = true;\n    Object.keys(this.listeners).forEach(type => {\n      this.windowContext.removeEventListener(type, this.listeners[type]);\n    });\n    this.timeouts.forEach(tid => clearTimeout(tid));\n  }\n\n  setTimeout(func, time) {\n    const id = setTimeout(() => {\n      this.timeouts = this.timeouts.filter(tid => tid !== id);\n      func();\n    }, time);\n    this.timeouts.push(id);\n    return id;\n  }\n\n  setPreventInnerClose() {\n    if (this.preventInnerCloseTimeout) {\n      this.clearTimeout(this.preventInnerCloseTimeout);\n    }\n    this.preventInnerClose = true;\n    this.preventInnerCloseTimeout = this.setTimeout(() => {\n      this.preventInnerClose = false;\n      this.preventInnerCloseTimeout = null;\n    }, 100);\n  }\n\n  // Get info for the best suited image to display with the given srcType\n  getBestImageForType(srcType) {\n    let imageSrc = this.props[srcType];\n    let fitSizes = {};\n\n    if (this.isImageLoaded(imageSrc)) {\n      // Use full-size image if available\n      fitSizes = this.getFitSizes(\n        this.imageCache[imageSrc].width,\n        this.imageCache[imageSrc].height\n      );\n    } else if (this.isImageLoaded(this.props[`${srcType}Thumbnail`])) {\n      // Fall back to using thumbnail if the image has not been loaded\n      imageSrc = this.props[`${srcType}Thumbnail`];\n      fitSizes = this.getFitSizes(\n        this.imageCache[imageSrc].width,\n        this.imageCache[imageSrc].height,\n        true\n      );\n    } else {\n      return null;\n    }\n\n    return {\n      src: imageSrc,\n      height: this.imageCache[imageSrc].height,\n      width: this.imageCache[imageSrc].width,\n      targetHeight: fitSizes.height,\n      targetWidth: fitSizes.width,\n    };\n  }\n\n  // Get sizing for when an image is larger than the window\n  getFitSizes(width, height, stretch) {\n    const boxSize = this.getLightboxRect();\n    let maxHeight = boxSize.height - this.props.imagePadding * 2;\n    let maxWidth = boxSize.width - this.props.imagePadding * 2;\n\n    if (!stretch) {\n      maxHeight = Math.min(maxHeight, height);\n      maxWidth = Math.min(maxWidth, width);\n    }\n\n    const maxRatio = maxWidth / maxHeight;\n    const srcRatio = width / height;\n\n    if (maxRatio > srcRatio) {\n      // height is the constraining dimension of the photo\n      return {\n        width: (width * maxHeight) / height,\n        height: maxHeight,\n      };\n    }\n\n    return {\n      width: maxWidth,\n      height: (height * maxWidth) / width,\n    };\n  }\n\n  getMaxOffsets(zoomLevel = this.state.zoomLevel) {\n    const currentImageInfo = this.getBestImageForType('mainSrc');\n    if (currentImageInfo === null) {\n      return { maxX: 0, minX: 0, maxY: 0, minY: 0 };\n    }\n\n    const boxSize = this.getLightboxRect();\n    const zoomMultiplier = this.getZoomMultiplier(zoomLevel);\n\n    let maxX = 0;\n    if (zoomMultiplier * currentImageInfo.width - boxSize.width < 0) {\n      // if there is still blank space in the X dimension, don't limit except to the opposite edge\n      maxX = (boxSize.width - zoomMultiplier * currentImageInfo.width) / 2;\n    } else {\n      maxX = (zoomMultiplier * currentImageInfo.width - boxSize.width) / 2;\n    }\n\n    let maxY = 0;\n    if (zoomMultiplier * currentImageInfo.height - boxSize.height < 0) {\n      // if there is still blank space in the Y dimension, don't limit except to the opposite edge\n      maxY = (boxSize.height - zoomMultiplier * currentImageInfo.height) / 2;\n    } else {\n      maxY = (zoomMultiplier * currentImageInfo.height - boxSize.height) / 2;\n    }\n\n    return {\n      maxX,\n      maxY,\n      minX: -1 * maxX,\n      minY: -1 * maxY,\n    };\n  }\n\n  // Get image src types\n  getSrcTypes() {\n    return [\n      {\n        name: 'mainSrc',\n        keyEnding: `i${this.keyCounter}`,\n      },\n      {\n        name: 'mainSrcThumbnail',\n        keyEnding: `t${this.keyCounter}`,\n      },\n      {\n        name: 'nextSrc',\n        keyEnding: `i${this.keyCounter + 1}`,\n      },\n      {\n        name: 'nextSrcThumbnail',\n        keyEnding: `t${this.keyCounter + 1}`,\n      },\n      {\n        name: 'prevSrc',\n        keyEnding: `i${this.keyCounter - 1}`,\n      },\n      {\n        name: 'prevSrcThumbnail',\n        keyEnding: `t${this.keyCounter - 1}`,\n      },\n    ];\n  }\n\n  /**\n   * Get sizing when the image is scaled\n   */\n  getZoomMultiplier(zoomLevel = this.state.zoomLevel) {\n    return ZOOM_RATIO ** zoomLevel;\n  }\n\n  /**\n   * Get the size of the lightbox in pixels\n   */\n  getLightboxRect() {\n    if (this.outerEl.current) {\n      return this.outerEl.current.getBoundingClientRect();\n    }\n\n    return {\n      width: getWindowWidth(),\n      height: getWindowHeight(),\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n    };\n  }\n\n  clearTimeout(id) {\n    this.timeouts = this.timeouts.filter(tid => tid !== id);\n    clearTimeout(id);\n  }\n\n  // Change zoom level\n  changeZoom(zoomLevel, clientX, clientY) {\n    // Ignore if zoom disabled\n    if (!this.props.enableZoom) {\n      return;\n    }\n\n    // Constrain zoom level to the set bounds\n    const nextZoomLevel = Math.max(\n      MIN_ZOOM_LEVEL,\n      Math.min(MAX_ZOOM_LEVEL, zoomLevel)\n    );\n\n    // Ignore requests that don't change the zoom level\n    if (nextZoomLevel === this.state.zoomLevel) {\n      return;\n    }\n\n    if (nextZoomLevel === MIN_ZOOM_LEVEL) {\n      // Snap back to center if zoomed all the way out\n      this.setState({\n        zoomLevel: nextZoomLevel,\n        offsetX: 0,\n        offsetY: 0,\n      });\n\n      return;\n    }\n\n    const imageBaseSize = this.getBestImageForType('mainSrc');\n    if (imageBaseSize === null) {\n      return;\n    }\n\n    const currentZoomMultiplier = this.getZoomMultiplier();\n    const nextZoomMultiplier = this.getZoomMultiplier(nextZoomLevel);\n\n    // Default to the center of the image to zoom when no mouse position specified\n    const boxRect = this.getLightboxRect();\n    const pointerX =\n      typeof clientX !== 'undefined'\n        ? clientX - boxRect.left\n        : boxRect.width / 2;\n    const pointerY =\n      typeof clientY !== 'undefined'\n        ? clientY - boxRect.top\n        : boxRect.height / 2;\n\n    const currentImageOffsetX =\n      (boxRect.width - imageBaseSize.width * currentZoomMultiplier) / 2;\n    const currentImageOffsetY =\n      (boxRect.height - imageBaseSize.height * currentZoomMultiplier) / 2;\n\n    const currentImageRealOffsetX = currentImageOffsetX - this.state.offsetX;\n    const currentImageRealOffsetY = currentImageOffsetY - this.state.offsetY;\n\n    const currentPointerXRelativeToImage =\n      (pointerX - currentImageRealOffsetX) / currentZoomMultiplier;\n    const currentPointerYRelativeToImage =\n      (pointerY - currentImageRealOffsetY) / currentZoomMultiplier;\n\n    const nextImageRealOffsetX =\n      pointerX - currentPointerXRelativeToImage * nextZoomMultiplier;\n    const nextImageRealOffsetY =\n      pointerY - currentPointerYRelativeToImage * nextZoomMultiplier;\n\n    const nextImageOffsetX =\n      (boxRect.width - imageBaseSize.width * nextZoomMultiplier) / 2;\n    const nextImageOffsetY =\n      (boxRect.height - imageBaseSize.height * nextZoomMultiplier) / 2;\n\n    let nextOffsetX = nextImageOffsetX - nextImageRealOffsetX;\n    let nextOffsetY = nextImageOffsetY - nextImageRealOffsetY;\n\n    // When zooming out, limit the offset so things don't get left askew\n    if (this.currentAction !== ACTION_PINCH) {\n      const maxOffsets = this.getMaxOffsets();\n      if (this.state.zoomLevel > nextZoomLevel) {\n        nextOffsetX = Math.max(\n          maxOffsets.minX,\n          Math.min(maxOffsets.maxX, nextOffsetX)\n        );\n        nextOffsetY = Math.max(\n          maxOffsets.minY,\n          Math.min(maxOffsets.maxY, nextOffsetY)\n        );\n      }\n    }\n\n    this.setState({\n      zoomLevel: nextZoomLevel,\n      offsetX: nextOffsetX,\n      offsetY: nextOffsetY,\n    });\n  }\n\n  closeIfClickInner(event) {\n    if (\n      !this.preventInnerClose &&\n      event.target.className.search(/\\bril-inner\\b/) > -1\n    ) {\n      this.requestClose(event);\n    }\n  }\n\n  /**\n   * Handle user keyboard actions\n   */\n  handleKeyInput(event) {\n    event.stopPropagation();\n\n    // Ignore key input during animations\n    if (this.isAnimating()) {\n      return;\n    }\n\n    // Allow slightly faster navigation through the images when user presses keys repeatedly\n    if (event.type === 'keyup') {\n      this.lastKeyDownTime -= this.props.keyRepeatKeyupBonus;\n      return;\n    }\n\n    const keyCode = event.which || event.keyCode;\n\n    // Ignore key presses that happen too close to each other (when rapid fire key pressing or holding down the key)\n    // But allow it if it's a lightbox closing action\n    const currentTime = new Date();\n    if (\n      currentTime.getTime() - this.lastKeyDownTime <\n        this.props.keyRepeatLimit &&\n      keyCode !== KEYS.ESC\n    ) {\n      return;\n    }\n    this.lastKeyDownTime = currentTime.getTime();\n\n    switch (keyCode) {\n      // ESC key closes the lightbox\n      case KEYS.ESC:\n        event.preventDefault();\n        this.requestClose(event);\n        break;\n\n      // Left arrow key moves to previous image\n      case KEYS.LEFT_ARROW:\n        if (!this.props.prevSrc) {\n          return;\n        }\n\n        event.preventDefault();\n        this.keyPressed = true;\n        this.requestMovePrev(event);\n        break;\n\n      // Right arrow key moves to next image\n      case KEYS.RIGHT_ARROW:\n        if (!this.props.nextSrc) {\n          return;\n        }\n\n        event.preventDefault();\n        this.keyPressed = true;\n        this.requestMoveNext(event);\n        break;\n\n      default:\n    }\n  }\n\n  /**\n   * Handle a mouse wheel event over the lightbox container\n   */\n  handleOuterMousewheel(event) {\n    // Prevent scrolling of the background\n    event.stopPropagation();\n\n    const xThreshold = WHEEL_MOVE_X_THRESHOLD;\n    let actionDelay = 0;\n    const imageMoveDelay = 500;\n\n    this.clearTimeout(this.resetScrollTimeout);\n    this.resetScrollTimeout = this.setTimeout(() => {\n      this.scrollX = 0;\n      this.scrollY = 0;\n    }, 300);\n\n    // Prevent rapid-fire zoom behavior\n    if (this.wheelActionTimeout !== null || this.isAnimating()) {\n      return;\n    }\n\n    if (Math.abs(event.deltaY) < Math.abs(event.deltaX)) {\n      // handle horizontal scrolls with image moves\n      this.scrollY = 0;\n      this.scrollX += event.deltaX;\n\n      const bigLeapX = xThreshold / 2;\n      // If the scroll amount has accumulated sufficiently, or a large leap was taken\n      if (this.scrollX >= xThreshold || event.deltaX >= bigLeapX) {\n        // Scroll right moves to next\n        this.requestMoveNext(event);\n        actionDelay = imageMoveDelay;\n        this.scrollX = 0;\n      } else if (\n        this.scrollX <= -1 * xThreshold ||\n        event.deltaX <= -1 * bigLeapX\n      ) {\n        // Scroll left moves to previous\n        this.requestMovePrev(event);\n        actionDelay = imageMoveDelay;\n        this.scrollX = 0;\n      }\n    }\n\n    // Allow successive actions after the set delay\n    if (actionDelay !== 0) {\n      this.wheelActionTimeout = this.setTimeout(() => {\n        this.wheelActionTimeout = null;\n      }, actionDelay);\n    }\n  }\n\n  handleImageMouseWheel(event) {\n    const yThreshold = WHEEL_MOVE_Y_THRESHOLD;\n\n    if (Math.abs(event.deltaY) >= Math.abs(event.deltaX)) {\n      event.stopPropagation();\n      // If the vertical scroll amount was large enough, perform a zoom\n      if (Math.abs(event.deltaY) < yThreshold) {\n        return;\n      }\n\n      this.scrollX = 0;\n      this.scrollY += event.deltaY;\n\n      this.changeZoom(\n        this.state.zoomLevel - event.deltaY,\n        event.clientX,\n        event.clientY\n      );\n    }\n  }\n\n  /**\n   * Handle a double click on the current image\n   */\n  handleImageDoubleClick(event) {\n    if (this.state.zoomLevel > MIN_ZOOM_LEVEL) {\n      // A double click when zoomed in zooms all the way out\n      this.changeZoom(MIN_ZOOM_LEVEL, event.clientX, event.clientY);\n    } else {\n      // A double click when zoomed all the way out zooms in\n      this.changeZoom(\n        this.state.zoomLevel + ZOOM_BUTTON_INCREMENT_SIZE,\n        event.clientX,\n        event.clientY\n      );\n    }\n  }\n\n  shouldHandleEvent(source) {\n    if (this.eventsSource === source) {\n      return true;\n    }\n    if (this.eventsSource === SOURCE_ANY) {\n      this.eventsSource = source;\n      return true;\n    }\n    switch (source) {\n      case SOURCE_MOUSE:\n        return false;\n      case SOURCE_TOUCH:\n        this.eventsSource = SOURCE_TOUCH;\n        this.filterPointersBySource();\n        return true;\n      case SOURCE_POINTER:\n        if (this.eventsSource === SOURCE_MOUSE) {\n          this.eventsSource = SOURCE_POINTER;\n          this.filterPointersBySource();\n          return true;\n        }\n        return false;\n      default:\n        return false;\n    }\n  }\n\n  addPointer(pointer) {\n    this.pointerList.push(pointer);\n  }\n\n  removePointer(pointer) {\n    this.pointerList = this.pointerList.filter(({ id }) => id !== pointer.id);\n  }\n\n  filterPointersBySource() {\n    this.pointerList = this.pointerList.filter(\n      ({ source }) => source === this.eventsSource\n    );\n  }\n\n  handleMouseDown(event) {\n    if (\n      this.shouldHandleEvent(SOURCE_MOUSE) &&\n      ReactImageLightbox.isTargetMatchImage(event.target)\n    ) {\n      this.addPointer(ReactImageLightbox.parseMouseEvent(event));\n      this.multiPointerStart(event);\n    }\n  }\n\n  handleMouseMove(event) {\n    if (this.shouldHandleEvent(SOURCE_MOUSE)) {\n      this.multiPointerMove(event, [ReactImageLightbox.parseMouseEvent(event)]);\n    }\n  }\n\n  handleMouseUp(event) {\n    if (this.shouldHandleEvent(SOURCE_MOUSE)) {\n      this.removePointer(ReactImageLightbox.parseMouseEvent(event));\n      this.multiPointerEnd(event);\n    }\n  }\n\n  handlePointerEvent(event) {\n    if (this.shouldHandleEvent(SOURCE_POINTER)) {\n      switch (event.type) {\n        case 'pointerdown':\n          if (ReactImageLightbox.isTargetMatchImage(event.target)) {\n            this.addPointer(ReactImageLightbox.parsePointerEvent(event));\n            this.multiPointerStart(event);\n          }\n          break;\n        case 'pointermove':\n          this.multiPointerMove(event, [\n            ReactImageLightbox.parsePointerEvent(event),\n          ]);\n          break;\n        case 'pointerup':\n        case 'pointercancel':\n          this.removePointer(ReactImageLightbox.parsePointerEvent(event));\n          this.multiPointerEnd(event);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  handleTouchStart(event) {\n    if (\n      this.shouldHandleEvent(SOURCE_TOUCH) &&\n      ReactImageLightbox.isTargetMatchImage(event.target)\n    ) {\n      [].forEach.call(event.changedTouches, eventTouch =>\n        this.addPointer(ReactImageLightbox.parseTouchPointer(eventTouch))\n      );\n      this.multiPointerStart(event);\n    }\n  }\n\n  handleTouchMove(event) {\n    if (this.shouldHandleEvent(SOURCE_TOUCH)) {\n      this.multiPointerMove(\n        event,\n        [].map.call(event.changedTouches, eventTouch =>\n          ReactImageLightbox.parseTouchPointer(eventTouch)\n        )\n      );\n    }\n  }\n\n  handleTouchEnd(event) {\n    if (this.shouldHandleEvent(SOURCE_TOUCH)) {\n      [].map.call(event.changedTouches, touch =>\n        this.removePointer(ReactImageLightbox.parseTouchPointer(touch))\n      );\n      this.multiPointerEnd(event);\n    }\n  }\n\n  decideMoveOrSwipe(pointer) {\n    if (this.state.zoomLevel <= MIN_ZOOM_LEVEL) {\n      this.handleSwipeStart(pointer);\n    } else {\n      this.handleMoveStart(pointer);\n    }\n  }\n\n  multiPointerStart(event) {\n    this.handleEnd(null);\n    switch (this.pointerList.length) {\n      case 1: {\n        event.preventDefault();\n        this.decideMoveOrSwipe(this.pointerList[0]);\n        break;\n      }\n      case 2: {\n        event.preventDefault();\n        this.handlePinchStart(this.pointerList);\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  multiPointerMove(event, pointerList) {\n    switch (this.currentAction) {\n      case ACTION_MOVE: {\n        event.preventDefault();\n        this.handleMove(pointerList[0]);\n        break;\n      }\n      case ACTION_SWIPE: {\n        event.preventDefault();\n        this.handleSwipe(pointerList[0]);\n        break;\n      }\n      case ACTION_PINCH: {\n        event.preventDefault();\n        this.handlePinch(pointerList);\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  multiPointerEnd(event) {\n    if (this.currentAction !== ACTION_NONE) {\n      this.setPreventInnerClose();\n      this.handleEnd(event);\n    }\n    switch (this.pointerList.length) {\n      case 0: {\n        this.eventsSource = SOURCE_ANY;\n        break;\n      }\n      case 1: {\n        event.preventDefault();\n        this.decideMoveOrSwipe(this.pointerList[0]);\n        break;\n      }\n      case 2: {\n        event.preventDefault();\n        this.handlePinchStart(this.pointerList);\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  handleEnd(event) {\n    switch (this.currentAction) {\n      case ACTION_MOVE:\n        this.handleMoveEnd(event);\n        break;\n      case ACTION_SWIPE:\n        this.handleSwipeEnd(event);\n        break;\n      case ACTION_PINCH:\n        this.handlePinchEnd(event);\n        break;\n      default:\n        break;\n    }\n  }\n\n  // Handle move start over the lightbox container\n  // This happens:\n  // - On a mouseDown event\n  // - On a touchstart event\n  handleMoveStart({ x: clientX, y: clientY }) {\n    if (!this.props.enableZoom) {\n      return;\n    }\n    this.currentAction = ACTION_MOVE;\n    this.moveStartX = clientX;\n    this.moveStartY = clientY;\n    this.moveStartOffsetX = this.state.offsetX;\n    this.moveStartOffsetY = this.state.offsetY;\n  }\n\n  // Handle dragging over the lightbox container\n  // This happens:\n  // - After a mouseDown and before a mouseUp event\n  // - After a touchstart and before a touchend event\n  handleMove({ x: clientX, y: clientY }) {\n    const newOffsetX = this.moveStartX - clientX + this.moveStartOffsetX;\n    const newOffsetY = this.moveStartY - clientY + this.moveStartOffsetY;\n    if (\n      this.state.offsetX !== newOffsetX ||\n      this.state.offsetY !== newOffsetY\n    ) {\n      this.setState({\n        offsetX: newOffsetX,\n        offsetY: newOffsetY,\n      });\n    }\n  }\n\n  handleMoveEnd() {\n    this.currentAction = ACTION_NONE;\n    this.moveStartX = 0;\n    this.moveStartY = 0;\n    this.moveStartOffsetX = 0;\n    this.moveStartOffsetY = 0;\n    // Snap image back into frame if outside max offset range\n    const maxOffsets = this.getMaxOffsets();\n    const nextOffsetX = Math.max(\n      maxOffsets.minX,\n      Math.min(maxOffsets.maxX, this.state.offsetX)\n    );\n    const nextOffsetY = Math.max(\n      maxOffsets.minY,\n      Math.min(maxOffsets.maxY, this.state.offsetY)\n    );\n    if (\n      nextOffsetX !== this.state.offsetX ||\n      nextOffsetY !== this.state.offsetY\n    ) {\n      this.setState({\n        offsetX: nextOffsetX,\n        offsetY: nextOffsetY,\n        shouldAnimate: true,\n      });\n      this.setTimeout(() => {\n        this.setState({ shouldAnimate: false });\n      }, this.props.animationDuration);\n    }\n  }\n\n  handleSwipeStart({ x: clientX, y: clientY }) {\n    this.currentAction = ACTION_SWIPE;\n    this.swipeStartX = clientX;\n    this.swipeStartY = clientY;\n    this.swipeEndX = clientX;\n    this.swipeEndY = clientY;\n  }\n\n  handleSwipe({ x: clientX, y: clientY }) {\n    this.swipeEndX = clientX;\n    this.swipeEndY = clientY;\n  }\n\n  handleSwipeEnd(event) {\n    const xDiff = this.swipeEndX - this.swipeStartX;\n    const xDiffAbs = Math.abs(xDiff);\n    const yDiffAbs = Math.abs(this.swipeEndY - this.swipeStartY);\n\n    this.currentAction = ACTION_NONE;\n    this.swipeStartX = 0;\n    this.swipeStartY = 0;\n    this.swipeEndX = 0;\n    this.swipeEndY = 0;\n\n    if (!event || this.isAnimating() || xDiffAbs < yDiffAbs * 1.5) {\n      return;\n    }\n\n    if (xDiffAbs < MIN_SWIPE_DISTANCE) {\n      const boxRect = this.getLightboxRect();\n      if (xDiffAbs < boxRect.width / 4) {\n        return;\n      }\n    }\n\n    if (xDiff > 0 && this.props.prevSrc) {\n      event.preventDefault();\n      this.requestMovePrev();\n    } else if (xDiff < 0 && this.props.nextSrc) {\n      event.preventDefault();\n      this.requestMoveNext();\n    }\n  }\n\n  calculatePinchDistance([a, b] = this.pinchTouchList) {\n    return Math.sqrt((a.x - b.x) ** 2 + (a.y - b.y) ** 2);\n  }\n\n  calculatePinchCenter([a, b] = this.pinchTouchList) {\n    return {\n      x: a.x - (a.x - b.x) / 2,\n      y: a.y - (a.y - b.y) / 2,\n    };\n  }\n\n  handlePinchStart(pointerList) {\n    if (!this.props.enableZoom) {\n      return;\n    }\n    this.currentAction = ACTION_PINCH;\n    this.pinchTouchList = pointerList.map(({ id, x, y }) => ({ id, x, y }));\n    this.pinchDistance = this.calculatePinchDistance();\n  }\n\n  handlePinch(pointerList) {\n    this.pinchTouchList = this.pinchTouchList.map(oldPointer => {\n      for (let i = 0; i < pointerList.length; i += 1) {\n        if (pointerList[i].id === oldPointer.id) {\n          return pointerList[i];\n        }\n      }\n\n      return oldPointer;\n    });\n\n    const newDistance = this.calculatePinchDistance();\n\n    const zoomLevel = this.state.zoomLevel + newDistance - this.pinchDistance;\n\n    this.pinchDistance = newDistance;\n    const { x: clientX, y: clientY } = this.calculatePinchCenter(\n      this.pinchTouchList\n    );\n    this.changeZoom(zoomLevel, clientX, clientY);\n  }\n\n  handlePinchEnd() {\n    this.currentAction = ACTION_NONE;\n    this.pinchTouchList = null;\n    this.pinchDistance = 0;\n  }\n\n  // Handle the window resize event\n  handleWindowResize() {\n    this.clearTimeout(this.resizeTimeout);\n    this.resizeTimeout = this.setTimeout(this.forceUpdate.bind(this), 100);\n  }\n\n  handleZoomInButtonClick() {\n    const nextZoomLevel = this.state.zoomLevel + ZOOM_BUTTON_INCREMENT_SIZE;\n    this.changeZoom(nextZoomLevel);\n    if (nextZoomLevel === MAX_ZOOM_LEVEL) {\n      this.zoomOutBtn.current.focus();\n    }\n  }\n\n  handleZoomOutButtonClick() {\n    const nextZoomLevel = this.state.zoomLevel - ZOOM_BUTTON_INCREMENT_SIZE;\n    this.changeZoom(nextZoomLevel);\n    if (nextZoomLevel === MIN_ZOOM_LEVEL) {\n      this.zoomInBtn.current.focus();\n    }\n  }\n\n  handleCaptionMousewheel(event) {\n    event.stopPropagation();\n\n    if (!this.caption.current) {\n      return;\n    }\n\n    const { height } = this.caption.current.getBoundingClientRect();\n    const { scrollHeight, scrollTop } = this.caption.current;\n    if (\n      (event.deltaY > 0 && height + scrollTop >= scrollHeight) ||\n      (event.deltaY < 0 && scrollTop <= 0)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  // Detach key and mouse input events\n  isAnimating() {\n    return this.state.shouldAnimate || this.state.isClosing;\n  }\n\n  // Check if image is loaded\n  isImageLoaded(imageSrc) {\n    return (\n      imageSrc &&\n      imageSrc in this.imageCache &&\n      this.imageCache[imageSrc].loaded\n    );\n  }\n\n  // Load image from src and call callback with image width and height on load\n  loadImage(srcType, imageSrc, done) {\n    // Return the image info if it is already cached\n    if (this.isImageLoaded(imageSrc)) {\n      this.setTimeout(() => {\n        done();\n      }, 1);\n      return;\n    }\n\n    const inMemoryImage = new global.Image();\n\n    if (this.props.imageCrossOrigin) {\n      inMemoryImage.crossOrigin = this.props.imageCrossOrigin;\n    }\n\n    inMemoryImage.onerror = errorEvent => {\n      this.props.onImageLoadError(imageSrc, srcType, errorEvent);\n\n      // failed to load so set the state loadErrorStatus\n      this.setState(prevState => ({\n        loadErrorStatus: { ...prevState.loadErrorStatus, [srcType]: true },\n      }));\n\n      done(errorEvent);\n    };\n\n    inMemoryImage.onload = () => {\n      this.props.onImageLoad(imageSrc, srcType, inMemoryImage);\n\n      this.imageCache[imageSrc] = {\n        loaded: true,\n        width: inMemoryImage.width,\n        height: inMemoryImage.height,\n      };\n\n      done();\n    };\n\n    inMemoryImage.src = imageSrc;\n  }\n\n  // Load all images and their thumbnails\n  loadAllImages(props = this.props) {\n    const generateLoadDoneCallback = (srcType, imageSrc) => err => {\n      // Give up showing image on error\n      if (err) {\n        return;\n      }\n\n      // Don't rerender if the src is not the same as when the load started\n      // or if the component has unmounted\n      if (this.props[srcType] !== imageSrc || this.didUnmount) {\n        return;\n      }\n\n      // Force rerender with the new image\n      this.forceUpdate();\n    };\n\n    // Load the images\n    this.getSrcTypes().forEach(srcType => {\n      const type = srcType.name;\n\n      // there is no error when we try to load it initially\n      if (props[type] && this.state.loadErrorStatus[type]) {\n        this.setState(prevState => ({\n          loadErrorStatus: { ...prevState.loadErrorStatus, [type]: false },\n        }));\n      }\n\n      // Load unloaded images\n      if (props[type] && !this.isImageLoaded(props[type])) {\n        this.loadImage(\n          type,\n          props[type],\n          generateLoadDoneCallback(type, props[type])\n        );\n      }\n    });\n  }\n\n  // Request that the lightbox be closed\n  requestClose(event) {\n    // Call the parent close request\n    const closeLightbox = () => this.props.onCloseRequest(event);\n\n    if (\n      this.props.animationDisabled ||\n      (event.type === 'keydown' && !this.props.animationOnKeyInput)\n    ) {\n      // No animation\n      closeLightbox();\n      return;\n    }\n\n    // With animation\n    // Start closing animation\n    this.setState({ isClosing: true });\n\n    // Perform the actual closing at the end of the animation\n    this.setTimeout(closeLightbox, this.props.animationDuration);\n  }\n\n  requestMove(direction, event) {\n    // Reset the zoom level on image move\n    const nextState = {\n      zoomLevel: MIN_ZOOM_LEVEL,\n      offsetX: 0,\n      offsetY: 0,\n    };\n\n    // Enable animated states\n    if (\n      !this.props.animationDisabled &&\n      (!this.keyPressed || this.props.animationOnKeyInput)\n    ) {\n      nextState.shouldAnimate = true;\n      this.setTimeout(\n        () => this.setState({ shouldAnimate: false }),\n        this.props.animationDuration\n      );\n    }\n    this.keyPressed = false;\n\n    this.moveRequested = true;\n\n    if (direction === 'prev') {\n      this.keyCounter -= 1;\n      this.setState(nextState);\n      this.props.onMovePrevRequest(event);\n    } else {\n      this.keyCounter += 1;\n      this.setState(nextState);\n      this.props.onMoveNextRequest(event);\n    }\n  }\n\n  // Request to transition to the next image\n  requestMoveNext(event) {\n    this.requestMove('next', event);\n  }\n\n  // Request to transition to the previous image\n  requestMovePrev(event) {\n    this.requestMove('prev', event);\n  }\n\n  render() {\n    const {\n      animationDisabled,\n      animationDuration,\n      clickOutsideToClose,\n      discourageDownloads,\n      enableZoom,\n      imageTitle,\n      nextSrc,\n      prevSrc,\n      toolbarButtons,\n      reactModalStyle,\n      onAfterOpen,\n      imageCrossOrigin,\n      reactModalProps,\n    } = this.props;\n    const {\n      zoomLevel,\n      offsetX,\n      offsetY,\n      isClosing,\n      loadErrorStatus,\n    } = this.state;\n\n    const boxSize = this.getLightboxRect();\n    let transitionStyle = {};\n\n    // Transition settings for sliding animations\n    if (!animationDisabled && this.isAnimating()) {\n      transitionStyle = {\n        ...transitionStyle,\n        transition: `transform ${animationDuration}ms`,\n      };\n    }\n\n    // Key endings to differentiate between images with the same src\n    const keyEndings = {};\n    this.getSrcTypes().forEach(({ name, keyEnding }) => {\n      keyEndings[name] = keyEnding;\n    });\n\n    // Images to be displayed\n    const images = [];\n    const addImage = (srcType, imageClass, transforms) => {\n      // Ignore types that have no source defined for their full size image\n      if (!this.props[srcType]) {\n        return;\n      }\n      const bestImageInfo = this.getBestImageForType(srcType);\n\n      const imageStyle = {\n        ...transitionStyle,\n        ...ReactImageLightbox.getTransform({\n          ...transforms,\n          ...bestImageInfo,\n        }),\n      };\n\n      if (zoomLevel > MIN_ZOOM_LEVEL) {\n        imageStyle.cursor = 'move';\n      }\n\n      // support IE 9 and 11\n      const hasTrueValue = object =>\n        Object.keys(object).some(key => object[key]);\n\n      // when error on one of the loads then push custom error stuff\n      if (bestImageInfo === null && hasTrueValue(loadErrorStatus)) {\n        images.push(\n          <div\n            className={`${imageClass} ril__image ril-errored`}\n            style={imageStyle}\n            key={this.props[srcType] + keyEndings[srcType]}\n          >\n            <div className=\"ril__errorContainer\">\n              {this.props.imageLoadErrorMessage}\n            </div>\n          </div>\n        );\n\n        return;\n      }\n      if (bestImageInfo === null) {\n        const loadingIcon = (\n          <div className=\"ril-loading-circle ril__loadingCircle ril__loadingContainer__icon\">\n            {[...new Array(12)].map((_, index) => (\n              <div\n                // eslint-disable-next-line react/no-array-index-key\n                key={index}\n                className=\"ril-loading-circle-point ril__loadingCirclePoint\"\n              />\n            ))}\n          </div>\n        );\n\n        // Fall back to loading icon if the thumbnail has not been loaded\n        images.push(\n          <div\n            className={`${imageClass} ril__image ril-not-loaded`}\n            style={imageStyle}\n            key={this.props[srcType] + keyEndings[srcType]}\n          >\n            <div className=\"ril__loadingContainer\">{loadingIcon}</div>\n          </div>\n        );\n\n        return;\n      }\n\n      const imageSrc = bestImageInfo.src;\n      if (discourageDownloads) {\n        imageStyle.backgroundImage = `url('${imageSrc}')`;\n        images.push(\n          <div\n            className={`${imageClass} ril__image ril__imageDiscourager`}\n            onDoubleClick={this.handleImageDoubleClick}\n            onWheel={this.handleImageMouseWheel}\n            style={imageStyle}\n            key={imageSrc + keyEndings[srcType]}\n          >\n            <div className=\"ril-download-blocker ril__downloadBlocker\" />\n          </div>\n        );\n      } else {\n        images.push(\n          <img\n            {...(imageCrossOrigin ? { crossOrigin: imageCrossOrigin } : {})}\n            className={`${imageClass} ril__image`}\n            onDoubleClick={this.handleImageDoubleClick}\n            onWheel={this.handleImageMouseWheel}\n            onDragStart={e => e.preventDefault()}\n            style={imageStyle}\n            src={imageSrc}\n            key={imageSrc + keyEndings[srcType]}\n            alt={\n              typeof imageTitle === 'string' ? imageTitle : translate('Image')\n            }\n            draggable={false}\n          />\n        );\n      }\n    };\n\n    const zoomMultiplier = this.getZoomMultiplier();\n    // Next Image (displayed on the right)\n    addImage('nextSrc', 'ril-image-next ril__imageNext', {\n      x: boxSize.width,\n    });\n    // Main Image\n    addImage('mainSrc', 'ril-image-current', {\n      x: -1 * offsetX,\n      y: -1 * offsetY,\n      zoom: zoomMultiplier,\n    });\n    // Previous Image (displayed on the left)\n    addImage('prevSrc', 'ril-image-prev ril__imagePrev', {\n      x: -1 * boxSize.width,\n    });\n\n    const modalStyle = {\n      overlay: {\n        zIndex: 1000,\n        backgroundColor: 'transparent',\n        ...reactModalStyle.overlay, // Allow style overrides via props\n      },\n      content: {\n        backgroundColor: 'transparent',\n        overflow: 'hidden', // Needed, otherwise keyboard shortcuts scroll the page\n        border: 'none',\n        borderRadius: 0,\n        padding: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        ...reactModalStyle.content, // Allow style overrides via props\n      },\n    };\n\n    return (\n      <Modal\n        isOpen\n        onRequestClose={clickOutsideToClose ? this.requestClose : undefined}\n        onAfterOpen={() => {\n          // Focus on the div with key handlers\n          if (this.outerEl.current) {\n            this.outerEl.current.focus();\n          }\n\n          onAfterOpen();\n        }}\n        style={modalStyle}\n        contentLabel={translate('Lightbox')}\n        appElement={\n          typeof global.window !== 'undefined'\n            ? global.window.document.body\n            : undefined\n        }\n        {...reactModalProps}\n      >\n        <div // eslint-disable-line jsx-a11y/no-static-element-interactions\n          // Floating modal with closing animations\n          className={`ril-outer ril__outer ril__outerAnimating ${\n            this.props.wrapperClassName\n          } ${isClosing ? 'ril-closing ril__outerClosing' : ''}`}\n          style={{\n            transition: `opacity ${animationDuration}ms`,\n            animationDuration: `${animationDuration}ms`,\n            animationDirection: isClosing ? 'normal' : 'reverse',\n          }}\n          ref={this.outerEl}\n          onWheel={this.handleOuterMousewheel}\n          onMouseMove={this.handleMouseMove}\n          onMouseDown={this.handleMouseDown}\n          onTouchStart={this.handleTouchStart}\n          onTouchMove={this.handleTouchMove}\n          tabIndex=\"-1\" // Enables key handlers on div\n          onKeyDown={this.handleKeyInput}\n          onKeyUp={this.handleKeyInput}\n        >\n          <div // eslint-disable-line jsx-a11y/no-static-element-interactions, jsx-a11y/click-events-have-key-events\n            // Image holder\n            className=\"ril-inner ril__inner\"\n            onClick={clickOutsideToClose ? this.closeIfClickInner : undefined}\n          >\n            {images}\n          </div>\n\n          {prevSrc && (\n            <button // Move to previous image button\n              type=\"button\"\n              className=\"ril-prev-button ril__navButtons ril__navButtonPrev\"\n              key=\"prev\"\n              aria-label={this.props.prevLabel}\n              onClick={!this.isAnimating() ? this.requestMovePrev : undefined} // Ignore clicks during animation\n            />\n          )}\n\n          {nextSrc && (\n            <button // Move to next image button\n              type=\"button\"\n              className=\"ril-next-button ril__navButtons ril__navButtonNext\"\n              key=\"next\"\n              aria-label={this.props.nextLabel}\n              onClick={!this.isAnimating() ? this.requestMoveNext : undefined} // Ignore clicks during animation\n            />\n          )}\n\n          <div // Lightbox toolbar\n            className=\"ril-toolbar ril__toolbar\"\n          >\n            <ul className=\"ril-toolbar-left ril__toolbarSide ril__toolbarLeftSide\">\n              <li className=\"ril-toolbar__item ril__toolbarItem\">\n                <span className=\"ril-toolbar__item__child ril__toolbarItemChild\">\n                  {imageTitle}\n                </span>\n              </li>\n            </ul>\n\n            <ul className=\"ril-toolbar-right ril__toolbarSide ril__toolbarRightSide\">\n              {toolbarButtons &&\n                toolbarButtons.map((button, i) => (\n                  <li\n                    key={`button_${i + 1}`}\n                    className=\"ril-toolbar__item ril__toolbarItem\"\n                  >\n                    {button}\n                  </li>\n                ))}\n\n              {enableZoom && (\n                <li className=\"ril-toolbar__item ril__toolbarItem\">\n                  <button // Lightbox zoom in button\n                    type=\"button\"\n                    key=\"zoom-in\"\n                    aria-label={this.props.zoomInLabel}\n                    className={[\n                      'ril-zoom-in',\n                      'ril__toolbarItemChild',\n                      'ril__builtinButton',\n                      'ril__zoomInButton',\n                      ...(zoomLevel === MAX_ZOOM_LEVEL\n                        ? ['ril__builtinButtonDisabled']\n                        : []),\n                    ].join(' ')}\n                    ref={this.zoomInBtn}\n                    disabled={\n                      this.isAnimating() || zoomLevel === MAX_ZOOM_LEVEL\n                    }\n                    onClick={\n                      !this.isAnimating() && zoomLevel !== MAX_ZOOM_LEVEL\n                        ? this.handleZoomInButtonClick\n                        : undefined\n                    }\n                  />\n                </li>\n              )}\n\n              {enableZoom && (\n                <li className=\"ril-toolbar__item ril__toolbarItem\">\n                  <button // Lightbox zoom out button\n                    type=\"button\"\n                    key=\"zoom-out\"\n                    aria-label={this.props.zoomOutLabel}\n                    className={[\n                      'ril-zoom-out',\n                      'ril__toolbarItemChild',\n                      'ril__builtinButton',\n                      'ril__zoomOutButton',\n                      ...(zoomLevel === MIN_ZOOM_LEVEL\n                        ? ['ril__builtinButtonDisabled']\n                        : []),\n                    ].join(' ')}\n                    ref={this.zoomOutBtn}\n                    disabled={\n                      this.isAnimating() || zoomLevel === MIN_ZOOM_LEVEL\n                    }\n                    onClick={\n                      !this.isAnimating() && zoomLevel !== MIN_ZOOM_LEVEL\n                        ? this.handleZoomOutButtonClick\n                        : undefined\n                    }\n                  />\n                </li>\n              )}\n\n              <li className=\"ril-toolbar__item ril__toolbarItem\">\n                <button // Lightbox close button\n                  type=\"button\"\n                  key=\"close\"\n                  aria-label={this.props.closeLabel}\n                  className=\"ril-close ril-toolbar__item__child ril__toolbarItemChild ril__builtinButton ril__closeButton\"\n                  onClick={!this.isAnimating() ? this.requestClose : undefined} // Ignore clicks during animation\n                />\n              </li>\n            </ul>\n          </div>\n\n          {this.props.imageCaption && (\n            // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n            <div // Image caption\n              onWheel={this.handleCaptionMousewheel}\n              onMouseDown={event => event.stopPropagation()}\n              className=\"ril-caption ril__caption\"\n              ref={this.caption}\n            >\n              <div className=\"ril-caption-content ril__captionContent\">\n                {this.props.imageCaption}\n              </div>\n            </div>\n          )}\n        </div>\n      </Modal>\n    );\n  }\n}\n\nReactImageLightbox.propTypes = {\n  //-----------------------------\n  // Image sources\n  //-----------------------------\n\n  // Main display image url\n  mainSrc: PropTypes.string.isRequired, // eslint-disable-line react/no-unused-prop-types\n\n  // Previous display image url (displayed to the left)\n  // If left undefined, movePrev actions will not be performed, and the button not displayed\n  prevSrc: PropTypes.string,\n\n  // Next display image url (displayed to the right)\n  // If left undefined, moveNext actions will not be performed, and the button not displayed\n  nextSrc: PropTypes.string,\n\n  //-----------------------------\n  // Image thumbnail sources\n  //-----------------------------\n\n  // Thumbnail image url corresponding to props.mainSrc\n  mainSrcThumbnail: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\n\n  // Thumbnail image url corresponding to props.prevSrc\n  prevSrcThumbnail: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\n\n  // Thumbnail image url corresponding to props.nextSrc\n  nextSrcThumbnail: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\n\n  //-----------------------------\n  // Event Handlers\n  //-----------------------------\n\n  // Close window event\n  // Should change the parent state such that the lightbox is not rendered\n  onCloseRequest: PropTypes.func.isRequired,\n\n  // Move to previous image event\n  // Should change the parent state such that props.prevSrc becomes props.mainSrc,\n  //  props.mainSrc becomes props.nextSrc, etc.\n  onMovePrevRequest: PropTypes.func,\n\n  // Move to next image event\n  // Should change the parent state such that props.nextSrc becomes props.mainSrc,\n  //  props.mainSrc becomes props.prevSrc, etc.\n  onMoveNextRequest: PropTypes.func,\n\n  // Called when an image fails to load\n  // (imageSrc: string, srcType: string, errorEvent: object): void\n  onImageLoadError: PropTypes.func,\n\n  // Called when image successfully loads\n  onImageLoad: PropTypes.func,\n\n  // Open window event\n  onAfterOpen: PropTypes.func,\n\n  //-----------------------------\n  // Download discouragement settings\n  //-----------------------------\n\n  // Enable download discouragement (prevents [right-click -> Save Image As...])\n  discourageDownloads: PropTypes.bool,\n\n  //-----------------------------\n  // Animation settings\n  //-----------------------------\n\n  // Disable all animation\n  animationDisabled: PropTypes.bool,\n\n  // Disable animation on actions performed with keyboard shortcuts\n  animationOnKeyInput: PropTypes.bool,\n\n  // Animation duration (ms)\n  animationDuration: PropTypes.number,\n\n  //-----------------------------\n  // Keyboard shortcut settings\n  //-----------------------------\n\n  // Required interval of time (ms) between key actions\n  // (prevents excessively fast navigation of images)\n  keyRepeatLimit: PropTypes.number,\n\n  // Amount of time (ms) restored after each keyup\n  // (makes rapid key presses slightly faster than holding down the key to navigate images)\n  keyRepeatKeyupBonus: PropTypes.number,\n\n  //-----------------------------\n  // Image info\n  //-----------------------------\n\n  // Image title\n  imageTitle: PropTypes.node,\n\n  // Image caption\n  imageCaption: PropTypes.node,\n\n  // Optional crossOrigin attribute\n  imageCrossOrigin: PropTypes.string,\n\n  //-----------------------------\n  // Lightbox style\n  //-----------------------------\n\n  // Set z-index style, etc., for the parent react-modal (format: https://github.com/reactjs/react-modal#styles )\n  reactModalStyle: PropTypes.shape({}),\n\n  // Padding (px) between the edge of the window and the lightbox\n  imagePadding: PropTypes.number,\n\n  wrapperClassName: PropTypes.string,\n\n  //-----------------------------\n  // Other\n  //-----------------------------\n\n  // Array of custom toolbar buttons\n  toolbarButtons: PropTypes.arrayOf(PropTypes.node),\n\n  // When true, clicks outside of the image close the lightbox\n  clickOutsideToClose: PropTypes.bool,\n\n  // Set to false to disable zoom functionality and hide zoom buttons\n  enableZoom: PropTypes.bool,\n\n  // Override props set on react-modal (https://github.com/reactjs/react-modal)\n  reactModalProps: PropTypes.shape({}),\n\n  // Aria-labels\n  nextLabel: PropTypes.string,\n  prevLabel: PropTypes.string,\n  zoomInLabel: PropTypes.string,\n  zoomOutLabel: PropTypes.string,\n  closeLabel: PropTypes.string,\n\n  imageLoadErrorMessage: PropTypes.node,\n};\n\nReactImageLightbox.defaultProps = {\n  imageTitle: null,\n  imageCaption: null,\n  toolbarButtons: null,\n  reactModalProps: {},\n  animationDisabled: false,\n  animationDuration: 300,\n  animationOnKeyInput: false,\n  clickOutsideToClose: true,\n  closeLabel: 'Close lightbox',\n  discourageDownloads: false,\n  enableZoom: true,\n  imagePadding: 10,\n  imageCrossOrigin: null,\n  keyRepeatKeyupBonus: 40,\n  keyRepeatLimit: 180,\n  mainSrcThumbnail: null,\n  nextLabel: 'Next image',\n  nextSrc: null,\n  nextSrcThumbnail: null,\n  onAfterOpen: () => {},\n  onImageLoadError: () => {},\n  onImageLoad: () => {},\n  onMoveNextRequest: () => {},\n  onMovePrevRequest: () => {},\n  prevLabel: 'Previous image',\n  prevSrc: null,\n  prevSrcThumbnail: null,\n  reactModalStyle: {},\n  wrapperClassName: '',\n  zoomInLabel: 'Zoom in',\n  zoomOutLabel: 'Zoom out',\n  imageLoadErrorMessage: 'This image failed to load',\n};\n\nexport default ReactImageLightbox;\n","const Footer = () => {\n  return (\n    <footer className=\"footer footer-text\">\n      <div className=\"row justify-content-end small\">\n        <div className=\"mr-3\">Contact us</div>\n        <div className=\"mr-3 faq-link\">FAQ</div>\n        <div className=\"mr-3\">Privacy & cookies</div>\n        <div className=\"mr-3\">Terms of use</div>\n        <div className=\"mr-4\">© Microsoft 2021</div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export const getDataUrlFromFile = async (file) =>\n  new Promise((resolve, reject) => {\n    var reader = new FileReader();\n    reader.onload = async (e) => {\n      if (!reader.result) {\n        reject(\"Failed to encode image as url\");\n      } else {\n        resolve(reader.result.toString());\n      }\n    };\n    reader.onerror = (ev) => {\n      reject(reader.error);\n    };\n    reader.readAsDataURL(file);\n  });\n\n/**\n * Builds a fully qualified image URL from an image filename\n *\n * @param {*} filename\n * @returns fully qualified URL\n */\nexport const getImageUriFromFileName = (filename) => {\n  // In dev, the URL is HARDCODED, because the service needs an\n  // internet accessible URL\n  const baseUri =\n    process.env.NODE_ENV === \"development\"\n      ? \"https://formrecognizer-showcase.azurewebsites.net\"\n      : window.location.origin;\n  return `${baseUri}/${filename}`;\n};\n\n/**\n * Builds a fully qualified image URL from a thubmail image\n * based on the full sized image's name\n *\n * @param {*} filename\n * @returns fully qualified URL\n */\nexport const getThumbnailUriFromFileName = (filename) => {\n  // all thumbnails start with \"t-\" and are in .jpg format\n  return `/t-${filename.replace(\".png\", \".jpg\")}`;\n};\n","import create from \"zustand\";\nimport { getImageUriFromFileName } from \"../utility\";\n\n// ---------------------------------------------------------------\n// Global Methods (are here because they manipulate global state)\n// ---------------------------------------------------------------\nconst setSelectedDocumentType = (documentType) => {\n  const state = useStore.getState();\n  useStore.setState({\n    ...state,\n    selectedDocumentType: documentType,\n  });\n};\n\nconst onSelectImage = (image) => {\n  const state = useStore.getState();\n  const uri = getImageUriFromFileName(image.filename);\n  useStore.setState({\n    ...state,\n    selectedImage: { uri, file: undefined, dataUri: undefined },\n    selectedImageFileName: image.filename,\n  });\n};\n\n/**\n * Sets selected image to the data extracted from an uploaded image\n * using the format { uri: undefined, file, dataUri }\n * @param {*} imgObj\n */\nconst onUpload = (imgObj, filename) => {\n  const state = useStore.getState();\n  useStore.setState({\n    ...state,\n    selectedImage: imgObj,\n    selectedImageFileName: filename,\n  });\n};\n\n// ---------------------------------------------------------------\n// Global State vars\n// ---------------------------------------------------------------\n// defines a store, setting the intial state\nexport const useStore = create((set, get) => ({\n  selectedDocumentType: \"Invoices\",\n  selectedImage: {\n    uri: undefined,\n    file: undefined,\n    dataUri: undefined,\n  },\n  selectedImageFileName: \"\",\n  setSelectedDocumentType: setSelectedDocumentType,\n  onSelectImage: onSelectImage,\n  onUpload: onUpload,\n}));\n","import className from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { useStore } from \"../store/global.store\";\nimport { useHistory } from \"react-router-dom\";\n\nconst DocumentSelector = (props) => {\n  const history = useHistory();\n  const selectedDocumentType = useStore((state) => state.selectedDocumentType);\n  const setSelectedDocumentType = useStore(\n    (state) => state.setSelectedDocumentType\n  );\n\n  /**\n   * Sets the selected document type in globals state\n   * goes fo File Selector component so user may choose a document\n   * @param {*} documentType \n   */\n  const onChangeDocumentType = (documentType) => {\n    setSelectedDocumentType(documentType);\n    history.push(\"/fileselector\");\n  };\n\n  if (props.menuStyle === \"links\") {\n    // return the selector as links\n    return (\n      <div className=\"linkedSelector\">\n        <button\n          type=\"button\"\n          onClick={() => onChangeDocumentType(\"Invoices\")}\n          className={className({\n            \"btn\": true,\n            \"btn-link\": true,\n            \"linked-menu-item\": true,\n            \"active-linked-menu-item\": selectedDocumentType === \"Invoices\",\n          })}\n        >\n          Invoices\n        </button>\n        &nbsp;&nbsp; | &nbsp;&nbsp;\n        <button\n          type=\"button\"\n          onClick={() => onChangeDocumentType(\"Receipts\")}\n          className={className({\n            btn: true,\n            \"btn-link\": true,\n            \"linked-menu-item\": true,\n            \"active-linked-menu-item\": selectedDocumentType === \"Receipts\",\n          })}\n        >\n          Receipts\n        </button>\n      </div>\n    );\n  } else {\n    // return the selector as tabbed navbar\n    return (\n      <div className=\"documentSelector\">\n        <ul className=\"nav nav-tabs\">\n          <li className=\"nav-item\">\n            <button\n              onClick={() => setSelectedDocumentType(\"Invoices\")}\n              className={className({\n                \"nav-link\": true,\n                active: selectedDocumentType === \"Invoices\",\n              })}\n              aria-current=\"page\"\n            >\n              Invoices\n            </button>\n          </li>\n          <li className=\"nav-item\">\n            <button\n              onClick={() => setSelectedDocumentType(\"Receipts\")}\n              className={className({\n                \"nav-link\": true,\n                active: selectedDocumentType === \"Receipts\",\n              })}\n            >\n              Receipts\n            </button>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n};\n\nDocumentSelector.propTypes = {\n  menuStyle: PropTypes.string,\n};\n// Set default props\nDocumentSelector.defaultProps = {\n  menuStyle: \"tabs\",\n};\n\nexport default DocumentSelector;\n","import DocumentSelector from \"../components/DocumentSelector\";\nimport { ArrowRightIcon } from \"@primer/octicons-react\";\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\n\nconst LandingPage = () => {\n  return (\n    <div className=\"row m-0\">\n      <div className=\"col-sm landing-left-col\">\n        {/* logo on mobile landing page */}\n        <img\n          style={{ height: \"30px\" }}\n          className=\"site-logo-mobile\"\n          alt=\"Microsoft\"\n          src=\"/site-logo-mobile.png\"\n        />\n      </div>\n      <div className=\"col-sm-6\">\n        <div className=\"container-fluid\">\n          {/* logo full screen */}\n          <img\n            style={{ height: \"30px\" }}\n            className=\"site-logo\"\n            alt=\"Microsoft\"\n            src=\"/site-logo.png\"\n          />\n\n          {/* welcome */}\n          <div className=\"mt-5\">\n            <p className=\"h4\">\n              <strong>Welcome to Form Recognizer</strong>\n              <br />\n              To get started, select a form type below:\n            </p>\n          </div>\n\n          {/* conversion */}\n          <div className=\"mt-4\">\n            <p className=\"small\">I want to convert:</p>\n          </div>\n\n          {/* document selector */}\n          <div className=\"mt-4\">\n            <DocumentSelector />\n          </div>\n\n          {/* separator */}\n          <div className=\"mt-4 pt-1\">\n            <hr size=\"2\" />\n          </div>\n\n          {/* submit */}\n          <div className=\"mt-5\">\n            <div className=\"row justify-content-end\">\n              <div className=\"mr-3\">\n                <Link to=\"/fileselector\">\n                  <button type=\"button\" className=\"btn btn-primary\">\n                    &nbsp; Next Step &nbsp;\n                    <ArrowRightIcon size={16} />\n                  </button>\n                </Link>\n              </div>\n            </div>\n          </div>\n\n          {/* space at the bottom for mobile */}\n          <div className=\"mt-5\">\n            <p>&nbsp;</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useCallback, useMemo } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { useDropzone } from \"react-dropzone\";\nimport { getDataUrlFromFile } from \"../utility\";\nimport { useStore } from \"../store/global.store\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSnackbar } from \"notistack\";\n\n// Dropzone styling\nconst baseStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  padding: \"30px\",\n  borderWidth: 1,\n  borderRadius: 2,\n  borderColor: \"#707070\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#f9f9f9\",\n  color: \"#000000\",\n  transition: \"border .3s ease-in-out\",\n};\n\nconst activeStyle = {\n  borderColor: \"#406fdb\",\n  borderStyle: \"solid\",\n  borderWidth: 2,\n};\n\nconst acceptStyle = {\n  borderColor: \"#02ac10\",\n  borderWidth: 3,\n};\n\nconst rejectStyle = {\n  borderColor: \"#d30303\",\n  borderWidth: 3,\n};\n\nconst DragAndDrop = (props) => {\n  const history = useHistory();\n  const onUpload = useStore((state) => state.onUpload);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const onDrop = useCallback(\n    async (acceptedFiles, fileRejections) => {\n      // console.log(`Accepted files: ${acceptedFiles}`);\n      // console.log(`Rejected files: ${fileRejections}`);\n      if (fileRejections.length > 0 || acceptedFiles.length === 0) {\n        enqueueSnackbar(`Only .jpg or .png images will be accepted.`, {\n          variant: \"error\",\n          preventDuplicate: true,\n        });\n      }\n      if (acceptedFiles.length > 0) {\n        const file = acceptedFiles[0];\n        const dataUri = await getDataUrlFromFile(file);\n        onUpload({ uri: undefined, file, dataUri }, file.name);\n        enqueueSnackbar(`Uploading file \"${file.name}\"...`, {\n          variant: \"success\",\n          preventDuplicate: true,\n        });\n        history.push(\"/results\");\n      }\n    },\n    [onUpload, enqueueSnackbar, history]\n  );\n\n  const {\n    // acceptedFiles,\n    // fileRejections,\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n  } = useDropzone({\n    onDrop,\n    accept: \"image/jpeg, image/png\",\n    // maxFiles: 1,\n  });\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {}),\n    }),\n    [isDragActive, isDragReject, isDragAccept]\n  );\n\n  return (\n    <div {...getRootProps({ style })}>\n      <input {...getInputProps()} />\n      <div className=\"drag-and-drop-container row align-items-center\">\n        <div>\n          {/* upload to cloud SVG icon */}\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            // width=\"16\"\n            // height=\"16\"\n            fill=\"currentcolor\"\n            className=\"bi bi-cloud-upload cloud-upload-icon\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M4.406 1.342A5.53 5.53 0 0 1 8 0c2.69 0 4.923 2 5.166 4.579C14.758 4.804 16 6.137 16 7.773 16 9.569 14.502 11 12.687 11H10a.5.5 0 0 1 0-1h2.688C13.979 10 15 8.988 15 7.773c0-1.216-1.02-2.228-2.313-2.228h-.5v-.5C12.188 2.825 10.328 1 8 1a4.53 4.53 0 0 0-2.941 1.1c-.757.652-1.153 1.438-1.153 2.055v.448l-.445.049C2.064 4.805 1 5.952 1 7.318 1 8.785 2.23 10 3.781 10H6a.5.5 0 0 1 0 1H3.781C1.708 11 0 9.366 0 7.318c0-1.763 1.266-3.223 2.942-3.593.143-.863.698-1.723 1.464-2.383z\"\n            />\n            <path\n              fillRule=\"evenodd\"\n              d=\"M7.646 4.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V14.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3z\"\n            />\n          </svg>\n          <div className=\"h5 drag-and-drop-help\">\n            Drop file to upload or{\" \"}\n            <a href=\"#\" className=\"active-linked-menu-item\">\n              browse\n            </a>\n          </div>\n          <div className=\"text-muted\">\n            <em>(Only *.jpg and *.png images will be accepted)</em>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DragAndDrop;\n","export const INVOICES = [\n  {\n    name: \"Invoice 1\",\n    filename: \"invoice-1.jpg\",\n  },\n  {\n    name: \"Invoice 2\",\n    filename: \"invoice-2.png\",\n  },\n  {\n    name: \"Invoice 3\",\n    filename: \"invoice-3.png\",\n  },\n  {\n    name: \"Invoice 4\",\n    filename: \"invoice-4.png\",\n  },\n\n];\n\nexport const RECEIPTS = [\n  {\n    name: \"Receipt 1\",\n    filename: \"receipt-1.jpg\",\n  },\n  // {\n  //   name: \"Receipt 2\",\n  //   filename: \"receipt-2.png\",\n  // },\n  {\n    name: \"Receipt 3\",\n    filename: \"receipt-3.jpg\",\n  },\n  {\n    name: \"Receipt 4\",\n    filename: \"receipt-4.jpg\",\n  },\n];\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { useStore } from \"../store/global.store\";\nimport { INVOICES, RECEIPTS } from \"../data\";\nimport { getImageUriFromFileName, getThumbnailUriFromFileName } from \"../utility\";\n\nconst Gallery = () => {\n  const selectedDocumentType = useStore((state) => state.selectedDocumentType);\n  const selectedImage = useStore((state) => state.selectedImage);\n  const onSelectImage = useStore((state) => state.onSelectImage);\n  const images = selectedDocumentType === \"Invoices\" ? INVOICES : RECEIPTS;\n\n  return (\n    <div className=\"gallery-container\">\n      <p className=\"h4 sub-title\">\n        {selectedDocumentType === \"Invoices\" ? \"Invoice\" : \"Receipt\"} Gallery\n      </p>\n      <div className=\"gallery-grid\">\n        <div className=\"row row-equal-height align-items-center justify-content-start\">\n          {images.map((image, index) => {\n            const uri = getImageUriFromFileName(image.filename);\n            const thumbUri = getThumbnailUriFromFileName(image.filename);\n            const isSelected = uri === selectedImage?.uri;\n            return (\n              <div\n                key={image.name}\n                className={`col-xs-1 col-md-3 gallery-item ${\n                  isSelected ? \"gallery-item--selected\" : \"\"\n                }`}\n                onClick={() => onSelectImage(image)}\n              >\n                <center>\n                  <a className=\"btn rounded no-outline\">\n                    <img\n                      src={thumbUri}\n                      alt={image.name}\n                      className=\"img-thumbnail\"\n                    ></img>\n                  </a>\n                </center>\n              </div>\n            );\n          })}\n        </div>\n        {/* row */}\n      </div>\n    </div>\n  );\n};\n\nexport default Gallery;\n","import { ArrowRightIcon } from \"@primer/octicons-react\";\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\nimport DocumentSelector from \"../components/DocumentSelector\";\nimport DragAndDrop from \"../components/DragAndDrop\";\nimport Gallery from \"../components/Gallery\";\n\nconst FileSelectorPage = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"mt-5 mb-4\">\n        <img\n          style={{ height: \"30px\" }}\n          // className=\"img-fluid\"\n          alt=\"Microsoft\"\n          src=\"/site-logo.png\"\n        />\n      </div>\n\n      {/* document selector */}\n      <div className=\"mt-1 pt-1\">\n        <DocumentSelector menuStyle=\"links\" />\n      </div>\n\n      {/* separator */}\n      <div className=\"mt-4\">\n        <hr className=\"hr2\" />\n      </div>\n\n      {/* title */}\n      <div className=\"mt-4\">\n        <p className=\"h1 page-title\">Upload or Select a file</p>\n      </div>\n\n      <div className=\"mt-3\">\n        <div className=\"row elevated\">\n          <div className=\"row justify-content-start\">\n            <div className=\"col-md-3 left-elevated-column\">\n              <DragAndDrop />\n            </div>\n            <div className=\"col-md-9 right-elevated-column\">\n              <hr className=\"mobile-only-hr\" />\n              <Gallery />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* submit */}\n      <div className=\"mt-5\">\n        <div className=\"row justify-content-end\">\n          <div className=\"mr-3\">\n            <Link to=\"/results\">\n              <button type=\"button\" className=\"btn btn-primary\">\n                &nbsp; Read Image &nbsp;\n                <ArrowRightIcon size={16} />\n              </button>\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      {/* space at the bottom for mobile */}\n      <div className=\"mt-5 bottom-spacer\">\n        <p>&nbsp;</p>\n      </div>\n    </div>\n  );\n};\n\nexport default FileSelectorPage;\n","import Lightbox from './react-image-lightbox';\n\nexport default Lightbox;\n","import Lightbox from \"./react-image-lightbox\";\nimport \"./react-image-lightbox/style.css\"; // This only needs to be imported once in your app\nimport { useState } from \"react\";\n\nexport const AnalysedImage = ({\n  selectedImage,\n  selectedImageFileName,\n  selectedModel,\n}) => {\n  const [isLightBoxOpen, setIsLightBoxOpen] = useState(false);\n  const fileUrl = selectedImage?.uri\n    ? selectedImage.uri\n    : selectedImage.dataUri;\n  if (!fileUrl) {\n    return null;\n  }\n  const title = `Selected ${selectedModel.slice(0, -1)}`;\n  return (\n    <div>\n      <p className=\"h4\">{title}</p>\n      <div className=\"analyzed-img-container\">\n        <img\n          style={{ maxHeight: \"80vh\" }}\n          className=\"img-fluid analyzed-img-result\"\n          src={fileUrl}\n          alt=\"Analysed Document\"\n        />\n\n        <div align=\"right\" style={{ marginTop: \"15px\" }}>\n          {/* <p> </p> */}\n          <button\n            className=\"btn btn-primary btn-circle btn-circle-sm m-1\"\n            onClick={() => setIsLightBoxOpen(true)}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"12\"\n              height=\"12\"\n              fill=\"#ffffff\"\n              className=\"bi bi-zoom-in\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\"\n              />\n              <path d=\"M10.344 11.742c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1 6.538 6.538 0 0 1-1.398 1.4z\" />\n              <path\n                fillRule=\"evenodd\"\n                d=\"M6.5 3a.5.5 0 0 1 .5.5V6h2.5a.5.5 0 0 1 0 1H7v2.5a.5.5 0 0 1-1 0V7H3.5a.5.5 0 0 1 0-1H6V3.5a.5.5 0 0 1 .5-.5z\"\n              />\n            </svg>\n          </button>\n        </div>\n      </div>\n      {isLightBoxOpen && (\n        <Lightbox\n          mainSrc={fileUrl}\n          onCloseRequest={() => setIsLightBoxOpen(false)}\n        />\n      )}\n      <div className=\"text-muted\">{selectedImageFileName}</div>\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport className from \"classnames\";\nimport { capitalize } from \"../utility\";\n\n// Define which table style to use, according to\n// viewport width\nconst windowWidth = window.innerWidth;\nconst tableClass = windowWidth >= 567 ? \"table\" : \"collapsed-table\";\n\nconst InvoiceResultTable = ({\n  fields: {\n    InvoiceDate,\n    CustomerName,\n    CustomerAddress,\n    VendorName,\n    InvoiceTotal,\n  },\n}) => (\n  <table className={tableClass}>\n    <thead>\n      <tr>\n        <th>Field</th>\n        <th className=\"numeric\">Value</th>\n        <th className=\"numeric\">Confidence</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>Invoice Date</td>\n        <td>{InvoiceDate?.valueData.text}</td>\n        <td>{InvoiceDate?.confidence}</td>\n      </tr>\n      <tr>\n        <td>Customer Name</td>\n        <td>{CustomerName?.valueData.text}</td>\n        <td>{CustomerName?.confidence}</td>\n      </tr>\n      <tr>\n        <td>Customer Address</td>\n        <td>{CustomerAddress?.valueData.text}</td>\n        <td>{CustomerAddress?.confidence}</td>\n      </tr>\n      <tr>\n        <td>Vendor Name</td>\n        <td>{VendorName?.valueData.text}</td>\n        <td>{VendorName?.confidence}</td>\n      </tr>\n      <tr>\n        <td>Invoice Total</td>\n        <td>{InvoiceTotal?.valueData.text}</td>\n        <td>{InvoiceTotal?.confidence}</td>\n      </tr>\n    </tbody>\n  </table>\n);\n\nconst ReceiptsResultTable = ({\n  fields: {\n    MerchantName,\n    MerchantAddress,\n    MerchantPhoneNumber,\n    TransactionDate,\n    TransactionTime,\n    Subtotal,\n    Tip,\n    Total,\n  },\n}) => (\n  <table className={tableClass}>\n    <thead>\n      <tr>\n        <th>Field</th>\n        <th className=\"numeric\">Value</th>\n        <th className=\"numeric\">Confidence</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>Merchant Name</td>\n        <td>{MerchantName?.valueData.text}</td>\n        <td>{MerchantName?.confidence}</td>\n      </tr>\n      <tr>\n        <td>Merchant Address</td>\n        <td>{MerchantAddress?.valueData.text}</td>\n        <td>{MerchantAddress?.confidence}</td>\n      </tr>\n      <tr>\n        <td>Merchant Phone Number</td>\n        <td>{MerchantPhoneNumber?.valueData.text}</td>\n        <td>{MerchantPhoneNumber?.confidence}</td>\n      </tr>\n      <tr>\n        <td>Transaction Date</td>\n        <td>{TransactionDate?.valueData.text}</td>\n        <td>{TransactionDate?.confidence}</td>\n      </tr>\n      <tr>\n        <td>Transaction Time</td>\n        <td>{TransactionTime?.valueData.text}</td>\n        <td>{TransactionTime?.confidence}</td>\n      </tr>\n      <tr>\n        <td>Subtotal</td>\n        <td>{Subtotal?.valueData.text}</td>\n        <td>{Subtotal?.confidence}</td>\n      </tr>\n      <tr>\n        <td>Tip</td>\n        <td>{Tip?.valueData.text}</td>\n        <td>{Tip?.confidence}</td>\n      </tr>\n      <tr>\n        <td>Total</td>\n        <td>{Total?.valueData.text}</td>\n        <td>{Total?.confidence}</td>\n      </tr>\n    </tbody>\n  </table>\n);\n\nexport const Results = ({ selectedModel, imageData }) => {\n  const [activeTab, setActiveTab] = useState(\"information\");\n  if (!imageData?.fields) {\n    return null;\n  }\n  const renderResults = () => {\n    switch (activeTab) {\n      case \"json\": {\n        return (\n          <div>\n            <pre className=\"w-100 bg-light p-4 json-pre\">\n              <code>{JSON.stringify(imageData, undefined, 2)}</code>\n            </pre>\n          </div>\n        );\n      }\n      case \"information\":\n      default: {\n        return selectedModel === \"invoices\" ? (\n          <InvoiceResultTable\n            fields={imageData.fields}\n          />\n        ) : (\n          <ReceiptsResultTable\n            fields={imageData.fields}\n          />\n        );\n      }\n    }\n  };\n  const documentName = capitalize(selectedModel).slice(0, -1);\n  const informationTitle = `Data found in ${documentName}`;\n  return (\n    <>\n      <div className=\"d-flex justify-content-between mb-4 row\">\n        <div className=\"ml-3\">\n          <p className=\"h4 sub-title\">{informationTitle}</p>\n        </div>\n        <div className=\"linkedSelector ml-3 mr-3\">\n          <button\n            type=\"button\"\n            onClick={() => setActiveTab(\"information\")}\n            className={className({\n              btn: true,\n              \"btn-link\": true,\n              \"linked-menu-item\": true,\n              \"active-linked-menu-item\": activeTab === \"information\",\n            })}\n          >\n            {documentName} Information\n          </button>\n          &nbsp;&nbsp; | &nbsp;&nbsp;\n          <button\n            type=\"button\"\n            onClick={() => setActiveTab(\"json\")}\n            className={className({\n              btn: true,\n              \"btn-link\": true,\n              \"linked-menu-item\": true,\n              \"active-linked-menu-item\": activeTab === \"json\",\n            })}\n          >\n            JSON\n          </button>\n        </div>\n      </div>\n      {renderResults()}\n    </>\n  );\n};\n","/*\n * Capitalizes strings\n */\nexport const capitalize = function (string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n","import { ArrowLeftIcon } from \"@primer/octicons-react\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\nimport DocumentSelector from \"../components/DocumentSelector\";\nimport { useStore } from \"../store/global.store\";\nimport { useSnackbar } from \"notistack\";\nimport { useHistory } from \"react-router-dom\";\nimport { Results, AnalysedImage } from \"../components\";\n\nconst ResultsPage = () => {\n  const history = useHistory();\n  const [processingStatus, setProcessingStatus] = useState(\"idle\");\n  const [imageData, setImageData] = useState(undefined);\n  const selectedModel = useStore((state) =>\n    state.selectedDocumentType.toLowerCase()\n  );\n  const selectedImage = useStore((state) => state.selectedImage);\n  const selectedImageFileName = useStore(\n    (state) => state.selectedImageFileName\n  );\n  const isLoading = processingStatus === \"pending\";\n  const hasError = processingStatus === \"failure\";\n  const hasLoaded =\n    processingStatus === \"success\" || processingStatus === \"failure\";\n  const { enqueueSnackbar } = useSnackbar();\n  // console.log(selectedImage);\n\n  useEffect(() => {\n    // validate that we have an image selected or uploaded\n    const { uri, file, dataUri } = selectedImage;\n    if (!uri && !file && !dataUri) {\n      enqueueSnackbar(`Please select an image or upload a file.`, {\n        variant: \"error\",\n        preventDuplicate: true,\n      });\n      history.goBack();\n    }\n\n    // if we passed the basic validation, hit the API\n    const analyseSelectedImage = async () => {\n      if (!selectedImage.uri && !selectedImage.file) {\n        setProcessingStatus(\"idle\");\n        return;\n      }\n      try {\n        setProcessingStatus(\"pending\");\n\n        if (selectedImage.uri) {\n          const body = {\n            uri: selectedImage.uri,\n            model: selectedModel,\n          };\n          const response = await fetch(\"form-recognizer\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(body),\n          });\n          const data = await response.json();\n          setImageData(data);\n        } else if (selectedImage.file) {\n          const formData = new FormData();\n          formData.append(\"file\", selectedImage.file);\n          formData.append(\"model\", selectedModel);\n          const response = await fetch(\"form-recognizer\", {\n            method: \"POST\",\n            body: formData,\n          });\n          const data = await response.json();\n          setImageData(data);\n        } else {\n          setProcessingStatus(\"failure\");\n        }\n\n        setProcessingStatus(\"success\");\n      } catch {\n        setProcessingStatus(\"failure\");\n      }\n    };\n    analyseSelectedImage();\n\n    return () => {\n      //cleanup due to warning;\n    };\n  }, [selectedImage, enqueueSnackbar, history, selectedModel]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"mt-5 pb-5\">\n        <img\n          style={{ height: \"30px\" }}\n          className=\"img-fluid\"\n          alt=\"Microsoft\"\n          src=\"/site-logo.png\"\n        />\n      </div>\n\n      {/* document selector */}\n      <div className=\"mt-4\">\n        <DocumentSelector menuStyle=\"links\" />\n      </div>\n\n      {/* separator */}\n      <div className=\"mt-4\">\n        <hr className=\"hr2\" />\n      </div>\n\n      {/* title */}\n      <div className=\"mt-4\">\n        <p className=\"h1 page-title\">\n          {hasLoaded && !hasError ? \"File Successfully read!\" : \"Processing...\"}\n        </p>\n      </div>\n\n      <div className=\"mt-3\">\n        <div className=\"elevated\">\n          <div className=\"row justify-content-start row-eq-height\">\n            <div className=\"col-md-3 left-elevated-column\">\n              {hasLoaded ? (\n                <AnalysedImage\n                  selectedImage={selectedImage}\n                  selectedImageFileName={selectedImageFileName}\n                  selectedModel={selectedModel}\n                />\n              ) : null}\n            </div>\n            <div className=\"col-md-9 right-elevated-column\">\n              {\" \"}\n              <div className=\"\">\n                {isLoading ? <div className=\"loader\">Processing...</div> : null}\n                {hasLoaded && hasError ? <p>Something went wrong</p> : null}\n                {hasLoaded && !hasError ? (\n                  <>\n                    <hr className=\"mobile-only-hr\" />\n                    <Results\n                      selectedModel={selectedModel}\n                      imageData={imageData}\n                    />\n                  </>\n                ) : null}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* submit */}\n      <div className=\"mt-5\">\n        <div className=\"row justify-content-around\">\n          <div className=\"col mr-3\">\n            <Link to=\"/fileselector\">\n              <button type=\"button\" className=\"btn btn-primary\">\n                &nbsp; Back &nbsp;\n                <ArrowLeftIcon size={16} />\n              </button>\n            </Link>\n          </div>\n\n          {/*           <div className=\"col mr-3\">\n            <button type=\"button\" className=\"btn btn-primary\">\n              &nbsp; Complete &nbsp;\n              <ArrowRightIcon size={16} />\n            </button>\n          </div> */}\n        </div>\n      </div>\n\n      {/* space at the bottom for mobile */}\n      <div className=\"mt-5 bottom-spacer\">\n        <p>&nbsp;</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ResultsPage;\n","import { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n// local imports\nimport \"./App.css\";\nimport Footer from \"./components/Footer\";\nimport LandingPage from \"./pages/LandingPage\";\nimport FileSelectorPage from \"./pages/FileSelectorPage\";\nimport ResultsPage from \"./pages/ResultsPage\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"d-flex flex-column sticky-footer-wrapper min-vh-100\">\n        <main className=\"flex-fill\">\n          <Route path=\"/\" exact>\n            <LandingPage />\n          </Route>\n\n          <Route path=\"/fileselector\" exact>\n            <FileSelectorPage />\n          </Route>\n\n          <Route path=\"/results\" exact>\n            <ResultsPage />\n          </Route>\n        </main>\n        <Footer />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { SnackbarProvider } from \"notistack\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <SnackbarProvider\n      autoHideDuration={3000}\n      maxSnack={3}\n      anchorOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n    >\n      <App />\n    </SnackbarProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}